const { FhenixClient, plaintexts } = require("@fhenixprotocol/sdk");
const { ethers } = require("hardhat");
require("dotenv").config();

async function main() {
  const provider = new ethers.providers.JsonRpcProvider("https://api.devnet.fhenix.zone");
  const wallet = new ethers.Wallet(process.env.PRIVATE_KEY, provider);

  const contractAddress = "0x...."; // Ä‘á»‹a chá»‰ contract báº¡n Ä‘Ã£ deploy
  const abi = [
    "function setEncryptedCounter((bytes) value) public",
    "function addToCounter(uint32 _value) public",
    "function getEncryptedCounter() view returns (bytes)"
  ];

  const contract = new ethers.Contract(contractAddress, abi, wallet);

  // Khá»Ÿi táº¡o FhenixClient
  const fhe = await FhenixClient.create({ provider });

  // 1. MÃ£ hÃ³a sá»‘ 100
  const encrypted = await fhe.encrypt32(100);
  console.log("Encrypted:", encrypted.public);

  // 2. Gá»­i vÃ o contract
  const tx1 = await contract.setEncryptedCounter(encrypted.public);
  await tx1.wait();
  console.log("âœ… setEncryptedCounter done");

  // 3. Cá»™ng thÃªm 23
  const tx2 = await contract.addToCounter(23);
  await tx2.wait();
  console.log("âœ… addToCounter done");

  // 4. Láº¥y káº¿t quáº£ Ä‘Ã£ mÃ£ hÃ³a
  const encResult = await contract.getEncryptedCounter();
  const decrypted = await fhe.decrypt(encResult);
  console.log("ðŸŽ‰ Final Result (Decrypted):", decrypted); // Káº¿t quáº£: 123
}

main();
